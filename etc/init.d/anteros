#!bin/bash
#
# anteros Application Startup Script
#
# chkconfig: 345 90 14
# description: Application Startup Script
# config: /etc/anteros/supervisord.conf
# pidfile: /var/run/anteros/anteros.pid

# Source function library
. /etc/rc.d/init.d/functions

# Source the optional environment setup file
if [ -f /etc/anteros/anteros.env ]; then
	. /etc/anteros/anteros.env
fi

RETVAL=0

# Set limits here in addition to limits.conf
#-------------------------------------------------------------------------------
if [ -n "$ULIMIT_OPEN_FILES" ]; then
	sysctl -w fs.file-max=$ULIMIT_OPEN_FILES > /dev/null
	RETVAL=$?
	[ $RETVAL -ne 0 ] && echo "fs.file-max=$ULIMIT_OPEN_FILES failed" && exit $RETVAL

	sysctl -w fs.nr_open=$ULIMIT_OPEN_FILES > /dev/null
	RETVAL=$?
	[ $RETVAL -ne 0 ] && echo "fs.nr_open=$ULIMIT_OPEN_FILES failed" && exit $RETVAL

	ulimit -n $ULIMIT_OPEN_FILES > /dev/null
	RETVAL=$?
	[ $RETVAL -ne 0 ] && echo "ulimit -n $ULIMIT_OPEN_FILES failed" && exit $RETVAL
fi
if [ -n "$NET_IPV4_TCP_MEM" ]; then
	sysctl -w net.ipv4.tcp_mem=$NET_IPV4_TCP_MEM > /dev/null
	RETVAL=$?
	[ $RETVAL -ne 0 ] && echo "net.ipv4.tcp_mem=$NET_IPV4_TCP_MEM failed" && exit $RETVAL
fi
if [ -n "$NET_CORE_SOMAXCONN" ]; then
	sysctl -w net.core.somaxconn=$NET_CORE_SOMAXCONN > /dev/null
	RETVAL=$?
	[ $RETVAL -ne 0 ] && echo "net.core.somaxconn=$NET_CORE_SOMAXCONN failed" && exit $RETVAL
fi
if [ -n "$NET_IPV4_TCP_MAX_SYN_BACKLOG" ]; then
	sysctl -w net.ipv4.tcp_max_syn_backlog=$NET_IPV4_TCP_MAX_SYN_BACKLOG > /dev/null
	RETVAL=$?
	[ $RETVAL -ne 0 ] && echo "net.ipv4.tcp_max_syn_backlog=$NET_IPV4_TCP_MAX_SYN_BACKLOG failed" && exit $RETVAL
fi
#-------------------------------------------------------------------------------

start() {
	echo -n $"Starting anteros: "
	daemon supervisord -c /etc/anteros/supervisord.conf
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/anteros
}

stop() {
	echo -n $"Stopping anteros: "
	kill $(cat /var/run/anteros.pid)
	RETVAL=$?
	rm -f /var/run/anteros.pid
	echo
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/anteros
}

restart() {
	stop
	start
}

case "$1" in
  start)
	start
	;;
  stop) 
	stop
	;;
  restart|force-reload|reload)
	restart
	;;
  condrestart)
	[ -f /var/lock/subsys/anteros ] && restart
	;;
  status)
	status anteros
	RETVAL=$?
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
	exit 1
esac

exit $RETVAL
